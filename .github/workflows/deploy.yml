name: Build and Deploy to Azure Container Apps

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: d86b7e9a-8049-419d-943e-8bf2869a89da
          tenant-id: 9fc151d1-62b8-402f-b07e-91533ff07e0d
          subscription-id: 0a271008-02cf-4a50-9bb3-afc7c4aed74c

      - name: Run Tests
        run: |  # Add your tests; e.g., for Python backend
          pip install -r requirements.txt
          pytest  # Or your test command; add npm test for frontend if integrated

      - name: Build and Push to ACR
        uses: azure/docker-login@v2
        with:
          login-server: restaurantpickeracr.azurecr.io
          # username: ${{ secrets.ACR_USERNAME }}  # Optional if OIDC has AcrPush; else add as secret
          # password: ${{ secrets.ACR_PASSWORD }}
      - run: |
          docker build -t restaurantpickeracr.azurecr.io/restaurant-api:${{ github.sha }} .
          docker push restaurantpickeracr.azurecr.io/restaurant-api:${{ github.sha }}

  deploy:
    needs: build  # Run after build succeeds
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code  # Needed for compose.yml if using compose
        uses: actions/checkout@v4

      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: d86b7e9a-8049-419d-943e-8bf2869a89da
          tenant-id: 9fc151d1-62b8-402f-b07e-91533ff07e0d
          subscription-id: 0a271008-02cf-4a50-9bb3-afc7c4aed74c

      - name: Deploy/Update Container App
        uses: azure/container-apps-deploy-action@v2
        with:
          appSourcePath: .  # Or path to your app code
          acrName: restaurantpickeracr
          resourceGroup: restaurant-picker-rg
          containerAppName: api  # Your app name
          containerAppEnvironment: your-ca-env-name  # Replace with actual
          imageToBuild: restaurantpickeracr.azurecr.io/restaurant-api:${{ github.sha }}  # Builds if needed; else use imageToDeploy for push-only
          dockerfilePath: Dockerfile  # If not default
          # For compose/multi-container: Use yamlPath with a containerapp.yaml generated from compose, or handle separately

      - name: Deploy Frontend (Optional)
        if: success()  # Run if backend succeeds
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/frontend"  # Path to React code
          output_location: "build"  # CRA build dir